[1mdiff --git a/app/(root)/interview/[id]/feedback/page.tsx b/app/(root)/interview/[id]/feedback/page.tsx[m
[1mindex 8b9f53a..4405efc 100644[m
[1m--- a/app/(root)/interview/[id]/feedback/page.tsx[m
[1m+++ b/app/(root)/interview/[id]/feedback/page.tsx[m
[36m@@ -6,6 +6,7 @@[m [mimport dayjs from 'dayjs'[m
 import {getCurrentUser} from "@/lib/actions/authaction";[m
 import {getFeedbackByInterviewId, getInterviewById} from "@/lib/actions/general.action";[m
 import {redirect} from "next/navigation";[m
[32m+[m[32mimport {RouteParams, Feedback} from "@/types";[m
 [m
 const Page = async ({ params }: RouteParams) => {[m
     const { id } = await params;[m
[36m@@ -63,7 +64,7 @@[m [mconst Page = async ({ params }: RouteParams) => {[m
             {/* Interview Breakdown */}[m
             <div className="flex flex-col gap-4">[m
                 <h2>Breakdown of the Interview:</h2>[m
[31m-                {feedback?.categoryScores?.map((category, index) => ([m
[32m+[m[32m                {feedback?.categoryScores?.map((category: { name: string; score: number; comment: string }, index: number) => ([m
                     <div key={index}>[m
                         <p className="font-bold">[m
                             {index + 1}. {category.name} ({category.score}/100)[m
[36m@@ -76,7 +77,7 @@[m [mconst Page = async ({ params }: RouteParams) => {[m
             <div className="flex flex-col gap-3">[m
                 <h3>Strengths</h3>[m
                 <ul>[m
[31m-                    {feedback?.strengths?.map((strength, index) => ([m
[32m+[m[32m                    {feedback?.strengths?.map((strength: string, index: number) => ([m
                         <li key={index}>{strength}</li>[m
                     ))}[m
                 </ul>[m
[36m@@ -85,7 +86,7 @@[m [mconst Page = async ({ params }: RouteParams) => {[m
             <div className="flex flex-col gap-3">[m
                 <h3>Areas for Improvement</h3>[m
                 <ul>[m
[31m-                    {feedback?.areasForImprovement?.map((area, index) => ([m
[32m+[m[32m                    {feedback?.areasForImprovement?.map((area: string, index: number) => ([m
                         <li key={index}>{area}</li>[m
                     ))}[m
                 </ul>[m
[1mdiff --git a/lib/actions/general.action.ts b/lib/actions/general.action.ts[m
[1mindex bf94cd0..26135a6 100644[m
[1m--- a/lib/actions/general.action.ts[m
[1m+++ b/lib/actions/general.action.ts[m
[36m@@ -2,6 +2,7 @@[m [mimport {db} from "@/firebase/admin";[m
 import {generateObject} from "ai";[m
 import {google} from "@ai-sdk/google";[m
 import {feedbackSchema} from "@/constants";[m
[32m+[m[32mimport {Interview, Feedback, GetLatestInterviewsParams, CreateFeedbackParams} from "@/types";[m
 [m
 export async function getInterviewsByUserId(userId: string): Promise<Interview[] |  null>{[m
     const interviews = await db[m
[1mdiff --git a/types/index.d.ts b/types/index.d.ts[m
[1mdeleted file mode 100644[m
[1mindex 223faeb..0000000[m
[1m--- a/types/index.d.ts[m
[1m+++ /dev/null[m
[36m@@ -1,99 +0,0 @@[m
[31m-interface Feedback {[m
[31m-  id: string;[m
[31m-  interviewId: string;[m
[31m-  totalScore: number;[m
[31m-  categoryScores: Array<{[m
[31m-    name: string;[m
[31m-    score: number;[m
[31m-    comment: string;[m
[31m-  }>;[m
[31m-  strengths: string[];[m
[31m-  areasForImprovement: string[];[m
[31m-  finalAssessment: string;[m
[31m-  createdAt: string;[m
[31m-}[m
[31m-[m
[31m-interface Interview {[m
[31m-  id: string;[m
[31m-  role: string;[m
[31m-  level: string;[m
[31m-  questions: string[];[m
[31m-  techstack: string[];[m
[31m-  createdAt: string;[m
[31m-  userId: string;[m
[31m-  type: string;[m
[31m-  finalized: boolean;[m
[31m-}[m
[31m-[m
[31m-interface CreateFeedbackParams {[m
[31m-  interviewId: string;[m
[31m-  userId: string;[m
[31m-  transcript: { role: string; content: string }[];[m
[31m-  feedbackId?: string;[m
[31m-}[m
[31m-[m
[31m-interface User {[m
[31m-  name: string;[m
[31m-  email: string;[m
[31m-  id: string;[m
[31m-}[m
[31m-[m
[31m-interface InterviewCardProps {[m
[31m-  id?: string;[m
[31m-  userId?: string;[m
[31m-  role: string;[m
[31m-  type: string;[m
[31m-  techstack: string[];[m
[31m-  createdAt?: string;[m
[31m-}[m
[31m-[m
[31m-interface AgentProps {[m
[31m-  userName: string;[m
[31m-  userId?: string;[m
[31m-  interviewId?: string;[m
[31m-  feedbackId?: string;[m
[31m-  type: "generate" | "interview";[m
[31m-  questions?: string[];[m
[31m-}[m
[31m-[m
[31m-interface RouteParams {[m
[31m-  params: Promise<Record<string, string>>;[m
[31m-  searchParams: Promise<Record<string, string>>;[m
[31m-}[m
[31m-[m
[31m-interface GetFeedbackByInterviewIdParams {[m
[31m-  interviewId: string;[m
[31m-  userId: string;[m
[31m-}[m
[31m-[m
[31m-interface GetLatestInterviewsParams {[m
[31m-  userId: string;[m
[31m-  limit?: number;[m
[31m-}[m
[31m-[m
[31m-interface SignInParams {[m
[31m-  email: string;[m
[31m-  idToken: string;[m
[31m-}[m
[31m-[m
[31m-interface SignUpParams {[m
[31m-  uid: string;[m
[31m-  name: string;[m
[31m-  email: string;[m
[31m-  password: string;[m
[31m-}[m
[31m-[m
[31m-type FormType = "sign-in" | "sign-up";[m
[31m-[m
[31m-interface InterviewFormProps {[m
[31m-  interviewId: string;[m
[31m-  role: string;[m
[31m-  level: string;[m
[31m-  type: string;[m
[31m-  techstack: string[];[m
[31m-  amount: number;[m
[31m-}[m
[31m-[m
[31m-interface TechIconProps {[m
[31m-  techStack: string[];[m
[31m-}[m
